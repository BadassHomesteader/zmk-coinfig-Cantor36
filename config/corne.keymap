/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// Last update 2023.07.07

// wish list
// window switcher via meh key space bar - Alt Tab but need to hold atl?
// add more hyper keys to layer
// is there a way to define hyper vs having to do all keys like I am now
//

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// LAYERS
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define DEFAULT  0
#define NUM      1
#define SYM      2
#define NAV      3
#define FUNC     4
#define HYPER    5
#define BT       6

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Mods
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
/ {
    behaviors {
        hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <500>;
          quick-tap-ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
        };

//htl is no longer working
    htl: tap_dance_layer {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_LAYERS_R";
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <250>;
        flavor = "tap-preferred";
        bindings = <&mo>, <&kp>;
    };

    gqt: global-quick-tap {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    ht2: hold-tap-200 {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    ht3: hold-tap-300 {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <300>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    ht4: hold-tap-400 {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <400>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    ht5: hold-tap-500 {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <500>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    ht6: hold-tap-600 {
        compatible = "zmk,behavior-hold-tap";
        label = "GLOBAL_QUICK_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <600>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
    };

    td0: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };

    tdn: tap_dance_num {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&mo NUM>, <&to NUM>;
        };

    };

};

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Combos
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
/ {
  combos {
    compatible = "zmk,combos";

    combo_esc {
      timeout-ms = <50>;
      key-positions = <3 4 5>;
      bindings = <&kp ESC>;
      layers = <0>;
    };

    combo_func {
      timeout-ms = <50>;
      key-positions = <2 3 4>;
      bindings = <&mo FUNC>;
    };

    combo_del {
      timeout-ms = <50>;
      key-positions = <7 8>;
      bindings = <&kp DEL>;
      layers = <0>;
    };

    combo_CTRLdel {
        timeout-ms = <50>;
        key-positions = <37 40>;
        bindings = <&kp LC(BSPC)>;
        layers = <0>;
    };

    combo_to1 {
        timeout-ms = <50>;
        key-positions = <1 30>;
        bindings = <&to NUM>;
        layers = <0>;
    };

    combo_to2 {
        timeout-ms = <50>;
        key-positions = <1 31>;
        bindings = <&to SYM>;
        layers = <0>;
    };

    combo_to3 {
        timeout-ms = <50>;
        key-positions = <1 32>;
        bindings = <&to NAV>;
        layers = <0>;
    };

    combo_to4 {
        timeout-ms = <50>;
        key-positions = <1 18>;
        bindings = <&to FUNC>;
        layers = <0>;
    };

    combo_to5 {
        timeout-ms = <50>;
        key-positions = <1 19>;
        bindings = <&to HYPER>;
        layers = <0>;
    };

    combo_to6 {
        timeout-ms = <50>;
        key-positions = <5 6>;
        bindings = <&to BT>;
        layers = <0>;
    };

    combo_mouse_l {
        timeout-ms = <50>;
        key-positions = <31 32>;
        bindings = <&kp LS(LC(LA(N7)))>;
        layers = <3 5>;
    };

    combo_mouse_r {
        timeout-ms = <50>;
        key-positions = <33 34>;
        bindings = <&kp LS(LC(LA(N9)))>;
        layers = <3 5>;
    };

  };
};

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Layer
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------

/ {
        keymap {
                compatible = "zmk,keymap";

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                default_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |      Q      |     W       |      E      |      R      |     T       |                                   |      Y      |     U       |     I       |      O      |     '       | 
&none        &kp Q        &kp W         &kp E          &kp R         &kp T                                              &kp Y         &kp U        &kp I         &kp O        &kp SQT         &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |      A      |      S      |      D      |      F      |     G       |                                   |      H      |     J       |     K       |      L      |     P       |  
&none        &kp A      &hm LGUI S    &hm LALT D    &hm LCTRL F      &kp G                                             &kp H      &hm RCTRL J    &hm RALT K    &hm RGUI L  &ht5 LC(PSCRN) P   &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |      Z      |      X      |      C      |      V      |      B      |                                   |      N      |     M       |     ,       |       .     |      ?      | 
&none     &ht3 LC(Z) Z  &ht3 LC(X) X  &ht3 LC(C) C  &ht4 LC(V) V     &kp B                                            &kp N         &kp M       &kp COMMA       &kp DOT     &kp QMARK        &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮       ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |    Enter    |     Num     |    Shift    |       |    Space    |   Bksp NAV  |  Enter Nav  |
                                             &htl SYM RET  &htl NUM LC(BSPC) &ht2 RSHIFT LSHIFT   &hm LC(LS(LALT)) SPACE &htl NAV BSPC &htl HYPER RET
//                                                ╰─────────────┴─────────────┴─────────────╯       ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                num_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |      _      |      =      |     5       |                              |      6      |     7       |     8       |      9      |     10      |      
&none     &to DEFAULT      &none       &kp UNDER     &kp EQUAL     &kp DEL                                       &kp N7        &kp N8         &kp N9        &none         &none         &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |      *      |      +      |     17      |                              |      4      |     5       |     6       |      21     |     22      |      
&none       &none          &none    &kp KP_MULTIPLY  &kp PLUS      &kp TAB                                       &kp N4        &kp N5         &kp N6        &none         &none         &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |      ?      |      ?      |      /      |      -      |     29      |                              |      1      |     2       |     3       |      33     |     34      |      
&none       &none          &none       &kp SLASH     &kp MINUS      &kp BSPC                                     &kp N1        &kp N2         &kp N3       &kp DOT        &none         &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |             |             |             |
                                                     &trans        &trans       &trans              &trans      &trans         &kp N0
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯

                        >;
                };

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                sym_layer {
                        bindings = <              
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |      ~      |      ^      |       ~     |                              |             |     [       |     ]       |     !       |      |      |   
&none     &to DEFAULT     &none         &kp TILDE     &kp CARET    &kp TILDE                                       &none       &kp LBKT     &kp RBKT       &kp EXCL        &kp PIPE     &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |     @       |      $      |      #      |       &     |      ;      |                              |             |     (       |     )       |      /      |     \       | 
&none       &kp AT       &kp DLLR        &kp HASH      &kp AMPS  &kp SEMICOLON                                     &none        &kp LPAR     &kp RPAR      &kp FSLH     &kp BSLH        &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |     %       |      %      |       :     |                              |             |     {       |     }       |      <      |     >       |     
&none       &none         &none        &kp PRCNT      &kp PRCNT    &kp COLON                                       &none      &kp LBRC     &kp RBRC     &kp LESS_THAN  &kp GREATER_THAN  &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |             |             |             |
                                                       &trans        &trans        &trans         &kp RCTRL        &trans       &trans 
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                nav_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |             |             |     //      |                              |    Pg Up    |  Ctrl Home  |   Home      |    End      |   Ctrl End  |   
&none     &to DEFAULT      &none         &none         &none        &none                                       &kp PG_UP   &kp LC(HOME)   &kp HOME        &kp END     &kp LC(END)     &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |      ;      |                              |     Tab     |    Left     |    Down     |     Up      |    Right    | 
&none      &kp LC(A)     &kp LC(S)      &kp BSPC      &kp DEL   &kp SEMICOLON                                    &kp TAB      &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT     &none         
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |             |                              |    Pg Dn    |    Left     |    Down     |     Up      |    Right    |
&none      &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)       &none                                   &kp PG_DN   &kp LS(LC(LA(N4))) &kp LS(LC(LA(N2))) &kp LS(LC(LA(N8))) &kp LS(LC(LA(N6)))  &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |             |             |             |
                                                     &trans        &kp RCTRL     &kp LSHIFT         &trans        &trans        &none
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
                func_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |             |             |             |                              |             |             |             |             |             |   
&none     &to DEFAULT       &none        &none        &none        &none                                        &kp F7        &kp F8         &kp F9         &kp F12         &none        &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |             |                              |    F4       |     F5     |     ?       |      ?      |     ?       | 
&none        &none         &none       &kp LALT     &kp LCTRL        &none                                        &kp F4        &kp F5        &kp F6         &kp F11         &none        &none 
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |             |                              |    F1       |    F2       |      F3     |      ?      |     ?       |
&none        &none         &none         &none         &none        &none                                        &kp F1       &kp F2         &kp F3         &kp F10         &none         &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |             |             |             |
                                                     &trans        &kp LCTRL       &trans           &trans        &trans      &none
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------

                hyper_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |             |             |    Export   |                              |    Pg Up    |  Ctrl Home  |   Home      |    End      |   Ctrl End  |   
&none     &to DEFAULT         &none         &none      &kp N5    &kp LG(LS(LC(LA(U))))                          &kp PG_UP   &kp LC(HOME)   &kp HOME        &kp END     &kp LC(END)     &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |    RTUx3    |                              |     Tab     |    Left     |    Down     |     Up      |    Right    | 
&none        &none         &none         &none         &kp N5    &kp LG(LS(LC(LA(G))))                          &kp TAB      &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT     &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |   Eligable  |                              |    Pg Dn    |    Left     |    Down     |     Up      |    Right    |
&none        &none         &none       &kp LC(C)      &kp LC(V)  &kp LG(LS(LC(LA(B))))                         &kp PG_DN   &kp LS(LC(LA(N4))) &kp LS(LC(LA(N2))) &kp LS(LC(LA(N8))) &kp LS(LC(LA(N6)))  &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |    Copy     |   L Mouse   |             |
                                                     &trans       &kp ESC   &kp LG(LS(LC(LA(F)))) &kp LG(LS(LC(LA(I)))) &kp LS(LC(LA(N7))) &trans
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------

                bt_layer {
                        bindings = <
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//      |     DEF     |             |             |             |             |                              |             |             |             |             |             |   
&none     &to DEFAULT      &none         &none         &kp N6        &none                                         &none        &none         &none         &none         &none           &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |             |                              |    BT4      |     BT5     |     ?       |      ?      |     ?       | 
&none        &none         &none         &none         &kp N6        &none                                     &bt BT_SEL 3   &bt BT_SEL 4     &none         &none         &none           &none 
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//      |             |             |             |             |             |                              |    BT1      |   BT2       |     BT3     |      ?      |     ?       |
&none        &none         &none         &none         &none        &none                                     &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2         &none         &none       &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |             |             |             |  |             |             |   BTCLR     |
                                                     &trans        &trans       &trans              &trans        &trans     &bt BT_CLR
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
//
// BT 1 = PC
// BT 2 = Laptop
// BT 3 = Surface
// BT 4 = iPad Pro
// BT 5 = s21 Phone
//
                        >;
                };
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------

        };
};

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Template and key count
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------
//      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//  0   |      1      |    2        |      3      |      4      |     5       |                              |      6      |     7       |     8       |      9      |     10      |   11
//&none        &none         &none         &none         &none        &none                                       &none        &none         &none         &none         &none         &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//  12  |      13     |    14       |      15     |      16     |     17      |                              |      18     |     19      |     20      |      21     |     22      |    23
//&none        &none         &none         &none         &none        &none                                       &none        &none        &none         &none          &none         &none
//      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//  24  |      25     |      26     |      27     |      28     |     29      |                              |      30     |     31      |     32      |      33     |     34      |   35
//&none        &none         &none         &none         &none        &none                                       &none        &none         &none         &none         &none         &none
//      ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                                |      36     |     37      |     38      |  |     39      |      40     |     41      |
//                                                    &trans         &trans       &trans            &trans        &trans        &trans
//                                                ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
